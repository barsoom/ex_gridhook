version: 2.1

orbs:
  heroku: circleci/heroku@2.0.0 # https://circleci.com/developer/orbs/orb/circleci/heroku

jobs:
  test:
    resource_class: medium
    docker:
      - image: hexpm/elixir:1.14.1-erlang-25.3.2-alpine-3.17.3
        environment:
          MIX_ENV: test
          DB_USER: postgres
          DATABASE_URL: postgres://postgres@localhost/auctionet_test
      - image: postgres:14.7-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout:
          name: "Checking out code"
      - run:
          name: "Installing dependencies"
          command: mix local.hex --force && mix local.rebar --force && mix deps.get && mix compile && apk add bash git curl
      - run:
          name: "Run linters and code analysis"
          command: mix format --check-formatted && mix credo
      - run:
          name: "Run tests"
          command:  mix do ecto.create, ecto.migrate && mix test

  prepare_app_image:
    environment:
      APP_NAMES: |
          auctionet-ex-gridhook
    resource_class: medium
    docker:
      - image: cimg/base:stable
    steps:
      - heroku/install
      - checkout
      - setup_remote_docker:
          version: 20.10.18
          docker_layer_caching: false
      - run:
          name: "Preparing app image"
          command: |
            script/ci/pipeline.sh prepare_image "script/ci/prepare_app_image.sh"

  deploy_to_production:
    docker:
      - image: cimg/base:stable
    steps:
      - heroku/install
      - checkout
      - run:
          name: "Release production"
          command: script/ci/pipeline.sh deploy "script/ci/deploy.sh auctionet-ex-gridhook"

workflows:
  deploy-workflow:
    jobs:
      - test:
          context: shared-config
      - prepare_app_image:
          context: shared-config
      - deploy_to_production:
          context: shared-config
          requires:
            - test
            - prepare_app_image
          filters:
            branches:
              only:
                - master
